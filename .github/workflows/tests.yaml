name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test ${{ matrix.features }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features: ["", "--no-default-features"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test ${{ matrix.features }}

  wasm:
    name: check WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - name: check
        run: |
          RUSTFLAGS='--cfg getrandom_backend="wasm_js"' cargo check \
          --target wasm32-unknown-unknown \
          --no-default-features \
          --features browser

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@clippy
      - name: clippy
        run: cargo clippy --workspace --all-targets
        env:
          RUSTFLAGS: "-D warnings"

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - name: doc
        run: cargo doc --workspace --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: fmt --check
        run: cargo fmt --all --check
